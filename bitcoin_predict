{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# pip install ipython==6.1.0 jupyter==1.0.0 matplotlib==2.0.2 \n",
    "# pip install numpy==1.13.3 pandas==0.20.3 pandas-datareader==0.5.0 scikit-learn==0.19.0\n",
    "import datetime \n",
    "import pandas_datareader.data as web\n",
    "import IPython.display\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas_datareader\n",
    "import sklearn\n",
    "import sklearn.linear_model\n",
    "import sklearn.model_selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2013-12-31</th>\n",
       "      <td>84498.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>83499.000000</td>\n",
       "      <td>83745.000000</td>\n",
       "      <td>29278885</td>\n",
       "      <td>83745.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>87102.078125</td>\n",
       "      <td>79138.609375</td>\n",
       "      <td>83745.000000</td>\n",
       "      <td>85000.000000</td>\n",
       "      <td>391077</td>\n",
       "      <td>85000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>91247.000000</td>\n",
       "      <td>83540.890625</td>\n",
       "      <td>85000.000000</td>\n",
       "      <td>87547.078125</td>\n",
       "      <td>25696</td>\n",
       "      <td>87547.078125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-03</th>\n",
       "      <td>92770.000000</td>\n",
       "      <td>87000.000000</td>\n",
       "      <td>87547.078125</td>\n",
       "      <td>92116.312500</td>\n",
       "      <td>30838</td>\n",
       "      <td>92116.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>95500.000000</td>\n",
       "      <td>87438.437500</td>\n",
       "      <td>92116.312500</td>\n",
       "      <td>94090.867188</td>\n",
       "      <td>72503</td>\n",
       "      <td>94090.867188</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    High           Low          Open         Close    Volume  \\\n",
       "Date                                                                           \n",
       "2013-12-31  84498.000000  80000.000000  83499.000000  83745.000000  29278885   \n",
       "2014-01-01  87102.078125  79138.609375  83745.000000  85000.000000    391077   \n",
       "2014-01-02  91247.000000  83540.890625  85000.000000  87547.078125     25696   \n",
       "2014-01-03  92770.000000  87000.000000  87547.078125  92116.312500     30838   \n",
       "2014-01-04  95500.000000  87438.437500  92116.312500  94090.867188     72503   \n",
       "\n",
       "               Adj Close  \n",
       "Date                      \n",
       "2013-12-31  83745.000000  \n",
       "2014-01-01  85000.000000  \n",
       "2014-01-02  87547.078125  \n",
       "2014-01-03  92116.312500  \n",
       "2014-01-04  94090.867188  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# データを取得\n",
    "df_btcjpy = web.get_data_yahoo('BTC-JPY', start=datetime.datetime(2014, 1, 1), end=datetime.datetime(2019, 9, 3))\n",
    "df_btcjpy.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2015-08-06</th>\n",
       "      <td>355.869995</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>355.869995</td>\n",
       "      <td>100.199997</td>\n",
       "      <td>53584</td>\n",
       "      <td>100.199997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-08-07</th>\n",
       "      <td>434.029999</td>\n",
       "      <td>100.199997</td>\n",
       "      <td>100.199997</td>\n",
       "      <td>320.200012</td>\n",
       "      <td>722558</td>\n",
       "      <td>320.200012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-08-08</th>\n",
       "      <td>436.679993</td>\n",
       "      <td>275.410004</td>\n",
       "      <td>320.200012</td>\n",
       "      <td>355.239990</td>\n",
       "      <td>737119</td>\n",
       "      <td>355.239990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-08-09</th>\n",
       "      <td>439.559998</td>\n",
       "      <td>345.179993</td>\n",
       "      <td>355.239990</td>\n",
       "      <td>384.619995</td>\n",
       "      <td>585917</td>\n",
       "      <td>384.619995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-08-10</th>\n",
       "      <td>410.850006</td>\n",
       "      <td>230.889999</td>\n",
       "      <td>384.619995</td>\n",
       "      <td>253.940002</td>\n",
       "      <td>1479695</td>\n",
       "      <td>253.940002</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High         Low        Open       Close   Volume  \\\n",
       "Date                                                                  \n",
       "2015-08-06  355.869995   10.000000  355.869995  100.199997    53584   \n",
       "2015-08-07  434.029999  100.199997  100.199997  320.200012   722558   \n",
       "2015-08-08  436.679993  275.410004  320.200012  355.239990   737119   \n",
       "2015-08-09  439.559998  345.179993  355.239990  384.619995   585917   \n",
       "2015-08-10  410.850006  230.889999  384.619995  253.940002  1479695   \n",
       "\n",
       "             Adj Close  \n",
       "Date                    \n",
       "2015-08-06  100.199997  \n",
       "2015-08-07  320.200012  \n",
       "2015-08-08  355.239990  \n",
       "2015-08-09  384.619995  \n",
       "2015-08-10  253.940002  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_btceth= web.get_data_yahoo('BTC-ETH', start=datetime.datetime(2014, 1, 1), end=datetime.datetime(2019, 9, 3))\n",
    "df_btceth.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-09-01</th>\n",
       "      <td>1109123.500</td>\n",
       "      <td>1.035852e+06</td>\n",
       "      <td>1.036736e+06</td>\n",
       "      <td>1101778.500</td>\n",
       "      <td>10037710651</td>\n",
       "      <td>1101778.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-02</th>\n",
       "      <td>1141297.625</td>\n",
       "      <td>1.090260e+06</td>\n",
       "      <td>1.101778e+06</td>\n",
       "      <td>1130057.875</td>\n",
       "      <td>13233435339</td>\n",
       "      <td>1130057.875</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   High           Low          Open        Close       Volume  \\\n",
       "Date                                                                            \n",
       "2019-09-01  1109123.500  1.035852e+06  1.036736e+06  1101778.500  10037710651   \n",
       "2019-09-02  1141297.625  1.090260e+06  1.101778e+06  1130057.875  13233435339   \n",
       "\n",
       "              Adj Close  \n",
       "Date                     \n",
       "2019-09-01  1101778.500  \n",
       "2019-09-02  1130057.875  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_btcjpy.tail(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 移動平均\n",
    "df_btcjpy['SMA'] = df_btcjpy['Close'].rolling(window=14).mean()\n",
    "df_btcjpy['Close'].plot(figsize=(15,6), color=\"red\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# データの整形\n",
    "df_btcjpy['change'] = (((df_btcjpy['Close'] - df_btcjpy['Open'])) / (df_btcjpy['Open']) * 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# データの表示\n",
    "df_btcjpy['Close'].plot(figsize=(15,6), color=\"green\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>SMA</th>\n",
       "      <th>change</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-05-26</th>\n",
       "      <td>9.747381e+05</td>\n",
       "      <td>9.457288e+05</td>\n",
       "      <td>9.536691e+05</td>\n",
       "      <td>9.600585e+05</td>\n",
       "      <td>13573509952</td>\n",
       "      <td>9.600585e+05</td>\n",
       "      <td>8.778445e+05</td>\n",
       "      <td>0.669985</td>\n",
       "      <td>1398997.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-27</th>\n",
       "      <td>9.638898e+05</td>\n",
       "      <td>9.397449e+05</td>\n",
       "      <td>9.600585e+05</td>\n",
       "      <td>9.527258e+05</td>\n",
       "      <td>8287781290</td>\n",
       "      <td>9.527258e+05</td>\n",
       "      <td>8.833591e+05</td>\n",
       "      <td>-0.763782</td>\n",
       "      <td>1221981.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-28</th>\n",
       "      <td>9.558088e+05</td>\n",
       "      <td>9.236486e+05</td>\n",
       "      <td>9.527258e+05</td>\n",
       "      <td>9.484305e+05</td>\n",
       "      <td>9145823720</td>\n",
       "      <td>9.484305e+05</td>\n",
       "      <td>8.870768e+05</td>\n",
       "      <td>-0.450838</td>\n",
       "      <td>1342956.625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-29</th>\n",
       "      <td>9.896431e+05</td>\n",
       "      <td>8.821968e+05</td>\n",
       "      <td>9.484305e+05</td>\n",
       "      <td>9.075308e+05</td>\n",
       "      <td>16111683026</td>\n",
       "      <td>9.075308e+05</td>\n",
       "      <td>8.899694e+05</td>\n",
       "      <td>-4.312361</td>\n",
       "      <td>1290744.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-30</th>\n",
       "      <td>9.310398e+05</td>\n",
       "      <td>8.897583e+05</td>\n",
       "      <td>9.075308e+05</td>\n",
       "      <td>9.283501e+05</td>\n",
       "      <td>12785875809</td>\n",
       "      <td>9.283501e+05</td>\n",
       "      <td>8.981584e+05</td>\n",
       "      <td>2.294068</td>\n",
       "      <td>1171484.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-31</th>\n",
       "      <td>9.324528e+05</td>\n",
       "      <td>9.164166e+05</td>\n",
       "      <td>9.283501e+05</td>\n",
       "      <td>9.245823e+05</td>\n",
       "      <td>7235337958</td>\n",
       "      <td>9.245823e+05</td>\n",
       "      <td>9.069832e+05</td>\n",
       "      <td>-0.405861</td>\n",
       "      <td>1156068.875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-01</th>\n",
       "      <td>9.544079e+05</td>\n",
       "      <td>9.240328e+05</td>\n",
       "      <td>9.245823e+05</td>\n",
       "      <td>9.464739e+05</td>\n",
       "      <td>7822589914</td>\n",
       "      <td>9.464739e+05</td>\n",
       "      <td>9.103445e+05</td>\n",
       "      <td>2.367725</td>\n",
       "      <td>1173967.875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-02</th>\n",
       "      <td>9.471181e+05</td>\n",
       "      <td>8.775699e+05</td>\n",
       "      <td>9.464739e+05</td>\n",
       "      <td>8.798864e+05</td>\n",
       "      <td>10556535111</td>\n",
       "      <td>8.798864e+05</td>\n",
       "      <td>9.104240e+05</td>\n",
       "      <td>-7.035317</td>\n",
       "      <td>1291234.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-03</th>\n",
       "      <td>8.803285e+05</td>\n",
       "      <td>8.078551e+05</td>\n",
       "      <td>8.798864e+05</td>\n",
       "      <td>8.320118e+05</td>\n",
       "      <td>16518745128</td>\n",
       "      <td>8.320118e+05</td>\n",
       "      <td>9.070549e+05</td>\n",
       "      <td>-5.441008</td>\n",
       "      <td>1206281.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-04</th>\n",
       "      <td>8.594300e+05</td>\n",
       "      <td>8.220340e+05</td>\n",
       "      <td>8.320118e+05</td>\n",
       "      <td>8.449221e+05</td>\n",
       "      <td>12810897191</td>\n",
       "      <td>8.449221e+05</td>\n",
       "      <td>9.071498e+05</td>\n",
       "      <td>1.551706</td>\n",
       "      <td>1197669.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-05</th>\n",
       "      <td>8.537121e+05</td>\n",
       "      <td>8.109222e+05</td>\n",
       "      <td>8.449221e+05</td>\n",
       "      <td>8.461058e+05</td>\n",
       "      <td>8363609378</td>\n",
       "      <td>8.461058e+05</td>\n",
       "      <td>9.058945e+05</td>\n",
       "      <td>0.140087</td>\n",
       "      <td>1223865.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-06</th>\n",
       "      <td>8.811768e+05</td>\n",
       "      <td>8.419007e+05</td>\n",
       "      <td>8.461058e+05</td>\n",
       "      <td>8.675986e+05</td>\n",
       "      <td>8539762654</td>\n",
       "      <td>8.675986e+05</td>\n",
       "      <td>9.053954e+05</td>\n",
       "      <td>2.540204</td>\n",
       "      <td>1246402.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-07</th>\n",
       "      <td>8.730261e+05</td>\n",
       "      <td>8.455918e+05</td>\n",
       "      <td>8.675986e+05</td>\n",
       "      <td>8.607624e+05</td>\n",
       "      <td>5579800307</td>\n",
       "      <td>8.607624e+05</td>\n",
       "      <td>9.037934e+05</td>\n",
       "      <td>-0.787944</td>\n",
       "      <td>1338775.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-08</th>\n",
       "      <td>8.641972e+05</td>\n",
       "      <td>8.214990e+05</td>\n",
       "      <td>8.607624e+05</td>\n",
       "      <td>8.337598e+05</td>\n",
       "      <td>6743677485</td>\n",
       "      <td>8.337598e+05</td>\n",
       "      <td>8.952285e+05</td>\n",
       "      <td>-3.137059</td>\n",
       "      <td>1371976.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-09</th>\n",
       "      <td>8.769709e+05</td>\n",
       "      <td>8.198418e+05</td>\n",
       "      <td>8.337598e+05</td>\n",
       "      <td>8.702972e+05</td>\n",
       "      <td>9084142767</td>\n",
       "      <td>8.702972e+05</td>\n",
       "      <td>8.888170e+05</td>\n",
       "      <td>4.382258</td>\n",
       "      <td>1313558.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-10</th>\n",
       "      <td>8.737464e+05</td>\n",
       "      <td>8.411506e+05</td>\n",
       "      <td>8.702972e+05</td>\n",
       "      <td>8.609314e+05</td>\n",
       "      <td>6931644891</td>\n",
       "      <td>8.609314e+05</td>\n",
       "      <td>8.822602e+05</td>\n",
       "      <td>-1.076170</td>\n",
       "      <td>1236496.250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-11</th>\n",
       "      <td>8.972733e+05</td>\n",
       "      <td>8.521664e+05</td>\n",
       "      <td>8.609314e+05</td>\n",
       "      <td>8.874771e+05</td>\n",
       "      <td>8564320651</td>\n",
       "      <td>8.874771e+05</td>\n",
       "      <td>8.779064e+05</td>\n",
       "      <td>3.083376</td>\n",
       "      <td>1278126.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-12</th>\n",
       "      <td>9.041037e+05</td>\n",
       "      <td>8.751389e+05</td>\n",
       "      <td>8.874771e+05</td>\n",
       "      <td>8.939819e+05</td>\n",
       "      <td>6633033624</td>\n",
       "      <td>8.939819e+05</td>\n",
       "      <td>8.769386e+05</td>\n",
       "      <td>0.732956</td>\n",
       "      <td>1234992.250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-13</th>\n",
       "      <td>9.474711e+05</td>\n",
       "      <td>8.884424e+05</td>\n",
       "      <td>8.939819e+05</td>\n",
       "      <td>9.450430e+05</td>\n",
       "      <td>9257191915</td>\n",
       "      <td>9.450430e+05</td>\n",
       "      <td>8.781310e+05</td>\n",
       "      <td>5.711644</td>\n",
       "      <td>1101735.250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-14</th>\n",
       "      <td>9.626158e+05</td>\n",
       "      <td>9.361449e+05</td>\n",
       "      <td>9.450430e+05</td>\n",
       "      <td>9.603909e+05</td>\n",
       "      <td>8838930538</td>\n",
       "      <td>9.603909e+05</td>\n",
       "      <td>8.806887e+05</td>\n",
       "      <td>1.624040</td>\n",
       "      <td>1176797.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-15</th>\n",
       "      <td>1.018789e+06</td>\n",
       "      <td>9.544392e+05</td>\n",
       "      <td>9.603909e+05</td>\n",
       "      <td>9.767460e+05</td>\n",
       "      <td>20153419348</td>\n",
       "      <td>9.767460e+05</td>\n",
       "      <td>8.828510e+05</td>\n",
       "      <td>1.702965</td>\n",
       "      <td>1019652.250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-16</th>\n",
       "      <td>1.024695e+06</td>\n",
       "      <td>9.761359e+05</td>\n",
       "      <td>9.767460e+05</td>\n",
       "      <td>1.012854e+06</td>\n",
       "      <td>14111755095</td>\n",
       "      <td>1.012854e+06</td>\n",
       "      <td>8.923487e+05</td>\n",
       "      <td>3.696816</td>\n",
       "      <td>1045266.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-17</th>\n",
       "      <td>1.014685e+06</td>\n",
       "      <td>9.715892e+05</td>\n",
       "      <td>1.012854e+06</td>\n",
       "      <td>9.862269e+05</td>\n",
       "      <td>10907038336</td>\n",
       "      <td>9.862269e+05</td>\n",
       "      <td>9.033641e+05</td>\n",
       "      <td>-2.628962</td>\n",
       "      <td>1144517.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-18</th>\n",
       "      <td>1.005125e+06</td>\n",
       "      <td>9.821487e+05</td>\n",
       "      <td>9.862269e+05</td>\n",
       "      <td>1.001822e+06</td>\n",
       "      <td>7133915123</td>\n",
       "      <td>1.001822e+06</td>\n",
       "      <td>9.145712e+05</td>\n",
       "      <td>1.581292</td>\n",
       "      <td>1134482.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-19</th>\n",
       "      <td>1.030185e+06</td>\n",
       "      <td>9.952485e+05</td>\n",
       "      <td>1.001822e+06</td>\n",
       "      <td>1.023726e+06</td>\n",
       "      <td>9694719302</td>\n",
       "      <td>1.023726e+06</td>\n",
       "      <td>9.272584e+05</td>\n",
       "      <td>2.186391</td>\n",
       "      <td>1161198.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-20</th>\n",
       "      <td>1.096974e+06</td>\n",
       "      <td>1.023726e+06</td>\n",
       "      <td>1.023726e+06</td>\n",
       "      <td>1.095572e+06</td>\n",
       "      <td>15719381716</td>\n",
       "      <td>1.095572e+06</td>\n",
       "      <td>9.435422e+05</td>\n",
       "      <td>7.018108</td>\n",
       "      <td>1142940.625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-21</th>\n",
       "      <td>1.199459e+06</td>\n",
       "      <td>1.082875e+06</td>\n",
       "      <td>1.095572e+06</td>\n",
       "      <td>1.144574e+06</td>\n",
       "      <td>31731655300</td>\n",
       "      <td>1.144574e+06</td>\n",
       "      <td>9.638144e+05</td>\n",
       "      <td>4.472686</td>\n",
       "      <td>1115099.625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-22</th>\n",
       "      <td>1.199381e+06</td>\n",
       "      <td>1.125967e+06</td>\n",
       "      <td>1.144574e+06</td>\n",
       "      <td>1.164230e+06</td>\n",
       "      <td>16351555484</td>\n",
       "      <td>1.164230e+06</td>\n",
       "      <td>9.874195e+05</td>\n",
       "      <td>1.717386</td>\n",
       "      <td>1063003.625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-23</th>\n",
       "      <td>1.188490e+06</td>\n",
       "      <td>1.132563e+06</td>\n",
       "      <td>1.164230e+06</td>\n",
       "      <td>1.181027e+06</td>\n",
       "      <td>14125371619</td>\n",
       "      <td>1.181027e+06</td>\n",
       "      <td>1.009614e+06</td>\n",
       "      <td>1.442702</td>\n",
       "      <td>1057630.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-06-24</th>\n",
       "      <td>1.264816e+06</td>\n",
       "      <td>1.180815e+06</td>\n",
       "      <td>1.181027e+06</td>\n",
       "      <td>1.262172e+06</td>\n",
       "      <td>23269044483</td>\n",
       "      <td>1.262172e+06</td>\n",
       "      <td>1.038274e+06</td>\n",
       "      <td>6.870760</td>\n",
       "      <td>1074300.375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-04</th>\n",
       "      <td>1.265237e+06</td>\n",
       "      <td>1.169552e+06</td>\n",
       "      <td>1.170210e+06</td>\n",
       "      <td>1.246343e+06</td>\n",
       "      <td>65407361909</td>\n",
       "      <td>1.246343e+06</td>\n",
       "      <td>1.094182e+06</td>\n",
       "      <td>6.505892</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-05</th>\n",
       "      <td>1.308760e+06</td>\n",
       "      <td>1.196264e+06</td>\n",
       "      <td>1.246343e+06</td>\n",
       "      <td>1.220423e+06</td>\n",
       "      <td>72152755538</td>\n",
       "      <td>1.220423e+06</td>\n",
       "      <td>1.105426e+06</td>\n",
       "      <td>-2.079704</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-06</th>\n",
       "      <td>1.280410e+06</td>\n",
       "      <td>1.209663e+06</td>\n",
       "      <td>1.220423e+06</td>\n",
       "      <td>1.269132e+06</td>\n",
       "      <td>67104922283</td>\n",
       "      <td>1.269132e+06</td>\n",
       "      <td>1.120533e+06</td>\n",
       "      <td>3.991189</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-07</th>\n",
       "      <td>1.275861e+06</td>\n",
       "      <td>1.219470e+06</td>\n",
       "      <td>1.269132e+06</td>\n",
       "      <td>1.271175e+06</td>\n",
       "      <td>53668268243</td>\n",
       "      <td>1.271175e+06</td>\n",
       "      <td>1.134596e+06</td>\n",
       "      <td>0.160986</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-08</th>\n",
       "      <td>1.275874e+06</td>\n",
       "      <td>1.230824e+06</td>\n",
       "      <td>1.271175e+06</td>\n",
       "      <td>1.253017e+06</td>\n",
       "      <td>41902983208</td>\n",
       "      <td>1.253017e+06</td>\n",
       "      <td>1.147657e+06</td>\n",
       "      <td>-1.428481</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-09</th>\n",
       "      <td>1.264689e+06</td>\n",
       "      <td>1.185841e+06</td>\n",
       "      <td>1.253017e+06</td>\n",
       "      <td>1.192472e+06</td>\n",
       "      <td>37530811455</td>\n",
       "      <td>1.192472e+06</td>\n",
       "      <td>1.159274e+06</td>\n",
       "      <td>-4.831899</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-10</th>\n",
       "      <td>1.221072e+06</td>\n",
       "      <td>1.173346e+06</td>\n",
       "      <td>1.192472e+06</td>\n",
       "      <td>1.218549e+06</td>\n",
       "      <td>29439456471</td>\n",
       "      <td>1.218549e+06</td>\n",
       "      <td>1.172348e+06</td>\n",
       "      <td>2.186749</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-11</th>\n",
       "      <td>1.220237e+06</td>\n",
       "      <td>1.181528e+06</td>\n",
       "      <td>1.218549e+06</td>\n",
       "      <td>1.199920e+06</td>\n",
       "      <td>24837707291</td>\n",
       "      <td>1.199920e+06</td>\n",
       "      <td>1.184107e+06</td>\n",
       "      <td>-1.528765</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-12</th>\n",
       "      <td>1.207745e+06</td>\n",
       "      <td>1.146418e+06</td>\n",
       "      <td>1.199920e+06</td>\n",
       "      <td>1.158376e+06</td>\n",
       "      <td>34517091809</td>\n",
       "      <td>1.158376e+06</td>\n",
       "      <td>1.192428e+06</td>\n",
       "      <td>-3.462262</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-13</th>\n",
       "      <td>1.159366e+06</td>\n",
       "      <td>1.050547e+06</td>\n",
       "      <td>1.158376e+06</td>\n",
       "      <td>1.059896e+06</td>\n",
       "      <td>53574196788</td>\n",
       "      <td>1.059896e+06</td>\n",
       "      <td>1.189677e+06</td>\n",
       "      <td>-8.501485</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-14</th>\n",
       "      <td>1.110088e+06</td>\n",
       "      <td>1.009143e+06</td>\n",
       "      <td>1.059896e+06</td>\n",
       "      <td>1.094571e+06</td>\n",
       "      <td>68158514144</td>\n",
       "      <td>1.094571e+06</td>\n",
       "      <td>1.187936e+06</td>\n",
       "      <td>3.271487</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-15</th>\n",
       "      <td>1.119442e+06</td>\n",
       "      <td>1.043077e+06</td>\n",
       "      <td>1.094571e+06</td>\n",
       "      <td>1.100616e+06</td>\n",
       "      <td>64284094828</td>\n",
       "      <td>1.100616e+06</td>\n",
       "      <td>1.186300e+06</td>\n",
       "      <td>0.552294</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-16</th>\n",
       "      <td>1.114071e+06</td>\n",
       "      <td>1.069049e+06</td>\n",
       "      <td>1.100616e+06</td>\n",
       "      <td>1.089067e+06</td>\n",
       "      <td>34987302044</td>\n",
       "      <td>1.089067e+06</td>\n",
       "      <td>1.181698e+06</td>\n",
       "      <td>-1.049344</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-17</th>\n",
       "      <td>1.117544e+06</td>\n",
       "      <td>1.071749e+06</td>\n",
       "      <td>1.089067e+06</td>\n",
       "      <td>1.098674e+06</td>\n",
       "      <td>31289939844</td>\n",
       "      <td>1.098674e+06</td>\n",
       "      <td>1.176588e+06</td>\n",
       "      <td>0.882131</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-18</th>\n",
       "      <td>1.163988e+06</td>\n",
       "      <td>1.092276e+06</td>\n",
       "      <td>1.098674e+06</td>\n",
       "      <td>1.163342e+06</td>\n",
       "      <td>37120430412</td>\n",
       "      <td>1.163342e+06</td>\n",
       "      <td>1.170659e+06</td>\n",
       "      <td>5.886017</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-19</th>\n",
       "      <td>1.166397e+06</td>\n",
       "      <td>1.122550e+06</td>\n",
       "      <td>1.163342e+06</td>\n",
       "      <td>1.141815e+06</td>\n",
       "      <td>36311888215</td>\n",
       "      <td>1.141815e+06</td>\n",
       "      <td>1.165044e+06</td>\n",
       "      <td>-1.850402</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-20</th>\n",
       "      <td>1.148464e+06</td>\n",
       "      <td>1.050660e+06</td>\n",
       "      <td>1.141815e+06</td>\n",
       "      <td>1.080700e+06</td>\n",
       "      <td>50783213506</td>\n",
       "      <td>1.080700e+06</td>\n",
       "      <td>1.151585e+06</td>\n",
       "      <td>-5.352431</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-21</th>\n",
       "      <td>1.089231e+06</td>\n",
       "      <td>1.041225e+06</td>\n",
       "      <td>1.080700e+06</td>\n",
       "      <td>1.076923e+06</td>\n",
       "      <td>40805036775</td>\n",
       "      <td>1.076923e+06</td>\n",
       "      <td>1.137710e+06</td>\n",
       "      <td>-0.349519</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-22</th>\n",
       "      <td>1.110428e+06</td>\n",
       "      <td>1.068646e+06</td>\n",
       "      <td>1.076923e+06</td>\n",
       "      <td>1.096971e+06</td>\n",
       "      <td>32790497093</td>\n",
       "      <td>1.096971e+06</td>\n",
       "      <td>1.126564e+06</td>\n",
       "      <td>1.861576</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-23</th>\n",
       "      <td>1.100163e+06</td>\n",
       "      <td>1.045487e+06</td>\n",
       "      <td>1.096971e+06</td>\n",
       "      <td>1.069033e+06</td>\n",
       "      <td>31252739914</td>\n",
       "      <td>1.069033e+06</td>\n",
       "      <td>1.117747e+06</td>\n",
       "      <td>-2.546808</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-24</th>\n",
       "      <td>1.091001e+06</td>\n",
       "      <td>1.042843e+06</td>\n",
       "      <td>1.069033e+06</td>\n",
       "      <td>1.064841e+06</td>\n",
       "      <td>35438750265</td>\n",
       "      <td>1.064841e+06</td>\n",
       "      <td>1.106768e+06</td>\n",
       "      <td>-0.392177</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-25</th>\n",
       "      <td>1.113070e+06</td>\n",
       "      <td>1.063856e+06</td>\n",
       "      <td>1.064841e+06</td>\n",
       "      <td>1.098556e+06</td>\n",
       "      <td>48120970164</td>\n",
       "      <td>1.098556e+06</td>\n",
       "      <td>1.099527e+06</td>\n",
       "      <td>3.166201</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-26</th>\n",
       "      <td>1.100380e+06</td>\n",
       "      <td>1.061276e+06</td>\n",
       "      <td>1.098556e+06</td>\n",
       "      <td>1.075948e+06</td>\n",
       "      <td>22726237926</td>\n",
       "      <td>1.075948e+06</td>\n",
       "      <td>1.093640e+06</td>\n",
       "      <td>-2.057986</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-27</th>\n",
       "      <td>1.087819e+06</td>\n",
       "      <td>1.017978e+06</td>\n",
       "      <td>1.075948e+06</td>\n",
       "      <td>1.032300e+06</td>\n",
       "      <td>10854781512</td>\n",
       "      <td>1.032300e+06</td>\n",
       "      <td>1.091668e+06</td>\n",
       "      <td>-4.056680</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-28</th>\n",
       "      <td>1.032377e+06</td>\n",
       "      <td>9.918403e+05</td>\n",
       "      <td>1.032300e+06</td>\n",
       "      <td>1.010875e+06</td>\n",
       "      <td>9515775501</td>\n",
       "      <td>1.010875e+06</td>\n",
       "      <td>1.085690e+06</td>\n",
       "      <td>-2.075408</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-29</th>\n",
       "      <td>1.030623e+06</td>\n",
       "      <td>9.974192e+05</td>\n",
       "      <td>1.010875e+06</td>\n",
       "      <td>1.018767e+06</td>\n",
       "      <td>5884337822</td>\n",
       "      <td>1.018767e+06</td>\n",
       "      <td>1.079844e+06</td>\n",
       "      <td>0.780648</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-30</th>\n",
       "      <td>1.029817e+06</td>\n",
       "      <td>1.004824e+06</td>\n",
       "      <td>1.018767e+06</td>\n",
       "      <td>1.020160e+06</td>\n",
       "      <td>3554251357</td>\n",
       "      <td>1.020160e+06</td>\n",
       "      <td>1.074922e+06</td>\n",
       "      <td>0.136752</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-08-31</th>\n",
       "      <td>1.043131e+06</td>\n",
       "      <td>1.013953e+06</td>\n",
       "      <td>1.020160e+06</td>\n",
       "      <td>1.036736e+06</td>\n",
       "      <td>4151658155</td>\n",
       "      <td>1.036736e+06</td>\n",
       "      <td>1.070498e+06</td>\n",
       "      <td>1.624800</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-01</th>\n",
       "      <td>1.109124e+06</td>\n",
       "      <td>1.035852e+06</td>\n",
       "      <td>1.036736e+06</td>\n",
       "      <td>1.101778e+06</td>\n",
       "      <td>10037710651</td>\n",
       "      <td>1.101778e+06</td>\n",
       "      <td>1.066100e+06</td>\n",
       "      <td>6.273821</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-09-02</th>\n",
       "      <td>1.141298e+06</td>\n",
       "      <td>1.090260e+06</td>\n",
       "      <td>1.101778e+06</td>\n",
       "      <td>1.130058e+06</td>\n",
       "      <td>13233435339</td>\n",
       "      <td>1.130058e+06</td>\n",
       "      <td>1.065260e+06</td>\n",
       "      <td>2.566702</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    High           Low          Open         Close  \\\n",
       "Date                                                                 \n",
       "2019-05-26  9.747381e+05  9.457288e+05  9.536691e+05  9.600585e+05   \n",
       "2019-05-27  9.638898e+05  9.397449e+05  9.600585e+05  9.527258e+05   \n",
       "2019-05-28  9.558088e+05  9.236486e+05  9.527258e+05  9.484305e+05   \n",
       "2019-05-29  9.896431e+05  8.821968e+05  9.484305e+05  9.075308e+05   \n",
       "2019-05-30  9.310398e+05  8.897583e+05  9.075308e+05  9.283501e+05   \n",
       "2019-05-31  9.324528e+05  9.164166e+05  9.283501e+05  9.245823e+05   \n",
       "2019-06-01  9.544079e+05  9.240328e+05  9.245823e+05  9.464739e+05   \n",
       "2019-06-02  9.471181e+05  8.775699e+05  9.464739e+05  8.798864e+05   \n",
       "2019-06-03  8.803285e+05  8.078551e+05  8.798864e+05  8.320118e+05   \n",
       "2019-06-04  8.594300e+05  8.220340e+05  8.320118e+05  8.449221e+05   \n",
       "2019-06-05  8.537121e+05  8.109222e+05  8.449221e+05  8.461058e+05   \n",
       "2019-06-06  8.811768e+05  8.419007e+05  8.461058e+05  8.675986e+05   \n",
       "2019-06-07  8.730261e+05  8.455918e+05  8.675986e+05  8.607624e+05   \n",
       "2019-06-08  8.641972e+05  8.214990e+05  8.607624e+05  8.337598e+05   \n",
       "2019-06-09  8.769709e+05  8.198418e+05  8.337598e+05  8.702972e+05   \n",
       "2019-06-10  8.737464e+05  8.411506e+05  8.702972e+05  8.609314e+05   \n",
       "2019-06-11  8.972733e+05  8.521664e+05  8.609314e+05  8.874771e+05   \n",
       "2019-06-12  9.041037e+05  8.751389e+05  8.874771e+05  8.939819e+05   \n",
       "2019-06-13  9.474711e+05  8.884424e+05  8.939819e+05  9.450430e+05   \n",
       "2019-06-14  9.626158e+05  9.361449e+05  9.450430e+05  9.603909e+05   \n",
       "2019-06-15  1.018789e+06  9.544392e+05  9.603909e+05  9.767460e+05   \n",
       "2019-06-16  1.024695e+06  9.761359e+05  9.767460e+05  1.012854e+06   \n",
       "2019-06-17  1.014685e+06  9.715892e+05  1.012854e+06  9.862269e+05   \n",
       "2019-06-18  1.005125e+06  9.821487e+05  9.862269e+05  1.001822e+06   \n",
       "2019-06-19  1.030185e+06  9.952485e+05  1.001822e+06  1.023726e+06   \n",
       "2019-06-20  1.096974e+06  1.023726e+06  1.023726e+06  1.095572e+06   \n",
       "2019-06-21  1.199459e+06  1.082875e+06  1.095572e+06  1.144574e+06   \n",
       "2019-06-22  1.199381e+06  1.125967e+06  1.144574e+06  1.164230e+06   \n",
       "2019-06-23  1.188490e+06  1.132563e+06  1.164230e+06  1.181027e+06   \n",
       "2019-06-24  1.264816e+06  1.180815e+06  1.181027e+06  1.262172e+06   \n",
       "...                  ...           ...           ...           ...   \n",
       "2019-08-04  1.265237e+06  1.169552e+06  1.170210e+06  1.246343e+06   \n",
       "2019-08-05  1.308760e+06  1.196264e+06  1.246343e+06  1.220423e+06   \n",
       "2019-08-06  1.280410e+06  1.209663e+06  1.220423e+06  1.269132e+06   \n",
       "2019-08-07  1.275861e+06  1.219470e+06  1.269132e+06  1.271175e+06   \n",
       "2019-08-08  1.275874e+06  1.230824e+06  1.271175e+06  1.253017e+06   \n",
       "2019-08-09  1.264689e+06  1.185841e+06  1.253017e+06  1.192472e+06   \n",
       "2019-08-10  1.221072e+06  1.173346e+06  1.192472e+06  1.218549e+06   \n",
       "2019-08-11  1.220237e+06  1.181528e+06  1.218549e+06  1.199920e+06   \n",
       "2019-08-12  1.207745e+06  1.146418e+06  1.199920e+06  1.158376e+06   \n",
       "2019-08-13  1.159366e+06  1.050547e+06  1.158376e+06  1.059896e+06   \n",
       "2019-08-14  1.110088e+06  1.009143e+06  1.059896e+06  1.094571e+06   \n",
       "2019-08-15  1.119442e+06  1.043077e+06  1.094571e+06  1.100616e+06   \n",
       "2019-08-16  1.114071e+06  1.069049e+06  1.100616e+06  1.089067e+06   \n",
       "2019-08-17  1.117544e+06  1.071749e+06  1.089067e+06  1.098674e+06   \n",
       "2019-08-18  1.163988e+06  1.092276e+06  1.098674e+06  1.163342e+06   \n",
       "2019-08-19  1.166397e+06  1.122550e+06  1.163342e+06  1.141815e+06   \n",
       "2019-08-20  1.148464e+06  1.050660e+06  1.141815e+06  1.080700e+06   \n",
       "2019-08-21  1.089231e+06  1.041225e+06  1.080700e+06  1.076923e+06   \n",
       "2019-08-22  1.110428e+06  1.068646e+06  1.076923e+06  1.096971e+06   \n",
       "2019-08-23  1.100163e+06  1.045487e+06  1.096971e+06  1.069033e+06   \n",
       "2019-08-24  1.091001e+06  1.042843e+06  1.069033e+06  1.064841e+06   \n",
       "2019-08-25  1.113070e+06  1.063856e+06  1.064841e+06  1.098556e+06   \n",
       "2019-08-26  1.100380e+06  1.061276e+06  1.098556e+06  1.075948e+06   \n",
       "2019-08-27  1.087819e+06  1.017978e+06  1.075948e+06  1.032300e+06   \n",
       "2019-08-28  1.032377e+06  9.918403e+05  1.032300e+06  1.010875e+06   \n",
       "2019-08-29  1.030623e+06  9.974192e+05  1.010875e+06  1.018767e+06   \n",
       "2019-08-30  1.029817e+06  1.004824e+06  1.018767e+06  1.020160e+06   \n",
       "2019-08-31  1.043131e+06  1.013953e+06  1.020160e+06  1.036736e+06   \n",
       "2019-09-01  1.109124e+06  1.035852e+06  1.036736e+06  1.101778e+06   \n",
       "2019-09-02  1.141298e+06  1.090260e+06  1.101778e+06  1.130058e+06   \n",
       "\n",
       "                 Volume     Adj Close           SMA    change        label  \n",
       "Date                                                                        \n",
       "2019-05-26  13573509952  9.600585e+05  8.778445e+05  0.669985  1398997.000  \n",
       "2019-05-27   8287781290  9.527258e+05  8.833591e+05 -0.763782  1221981.500  \n",
       "2019-05-28   9145823720  9.484305e+05  8.870768e+05 -0.450838  1342956.625  \n",
       "2019-05-29  16111683026  9.075308e+05  8.899694e+05 -4.312361  1290744.750  \n",
       "2019-05-30  12785875809  9.283501e+05  8.981584e+05  2.294068  1171484.500  \n",
       "2019-05-31   7235337958  9.245823e+05  9.069832e+05 -0.405861  1156068.875  \n",
       "2019-06-01   7822589914  9.464739e+05  9.103445e+05  2.367725  1173967.875  \n",
       "2019-06-02  10556535111  8.798864e+05  9.104240e+05 -7.035317  1291234.750  \n",
       "2019-06-03  16518745128  8.320118e+05  9.070549e+05 -5.441008  1206281.750  \n",
       "2019-06-04  12810897191  8.449221e+05  9.071498e+05  1.551706  1197669.125  \n",
       "2019-06-05   8363609378  8.461058e+05  9.058945e+05  0.140087  1223865.500  \n",
       "2019-06-06   8539762654  8.675986e+05  9.053954e+05  2.540204  1246402.125  \n",
       "2019-06-07   5579800307  8.607624e+05  9.037934e+05 -0.787944  1338775.000  \n",
       "2019-06-08   6743677485  8.337598e+05  8.952285e+05 -3.137059  1371976.750  \n",
       "2019-06-09   9084142767  8.702972e+05  8.888170e+05  4.382258  1313558.000  \n",
       "2019-06-10   6931644891  8.609314e+05  8.822602e+05 -1.076170  1236496.250  \n",
       "2019-06-11   8564320651  8.874771e+05  8.779064e+05  3.083376  1278126.000  \n",
       "2019-06-12   6633033624  8.939819e+05  8.769386e+05  0.732956  1234992.250  \n",
       "2019-06-13   9257191915  9.450430e+05  8.781310e+05  5.711644  1101735.250  \n",
       "2019-06-14   8838930538  9.603909e+05  8.806887e+05  1.624040  1176797.750  \n",
       "2019-06-15  20153419348  9.767460e+05  8.828510e+05  1.702965  1019652.250  \n",
       "2019-06-16  14111755095  1.012854e+06  8.923487e+05  3.696816  1045266.750  \n",
       "2019-06-17  10907038336  9.862269e+05  9.033641e+05 -2.628962  1144517.125  \n",
       "2019-06-18   7133915123  1.001822e+06  9.145712e+05  1.581292  1134482.000  \n",
       "2019-06-19   9694719302  1.023726e+06  9.272584e+05  2.186391  1161198.125  \n",
       "2019-06-20  15719381716  1.095572e+06  9.435422e+05  7.018108  1142940.625  \n",
       "2019-06-21  31731655300  1.144574e+06  9.638144e+05  4.472686  1115099.625  \n",
       "2019-06-22  16351555484  1.164230e+06  9.874195e+05  1.717386  1063003.625  \n",
       "2019-06-23  14125371619  1.181027e+06  1.009614e+06  1.442702  1057630.750  \n",
       "2019-06-24  23269044483  1.262172e+06  1.038274e+06  6.870760  1074300.375  \n",
       "...                 ...           ...           ...       ...          ...  \n",
       "2019-08-04  65407361909  1.246343e+06  1.094182e+06  6.505892          NaN  \n",
       "2019-08-05  72152755538  1.220423e+06  1.105426e+06 -2.079704          NaN  \n",
       "2019-08-06  67104922283  1.269132e+06  1.120533e+06  3.991189          NaN  \n",
       "2019-08-07  53668268243  1.271175e+06  1.134596e+06  0.160986          NaN  \n",
       "2019-08-08  41902983208  1.253017e+06  1.147657e+06 -1.428481          NaN  \n",
       "2019-08-09  37530811455  1.192472e+06  1.159274e+06 -4.831899          NaN  \n",
       "2019-08-10  29439456471  1.218549e+06  1.172348e+06  2.186749          NaN  \n",
       "2019-08-11  24837707291  1.199920e+06  1.184107e+06 -1.528765          NaN  \n",
       "2019-08-12  34517091809  1.158376e+06  1.192428e+06 -3.462262          NaN  \n",
       "2019-08-13  53574196788  1.059896e+06  1.189677e+06 -8.501485          NaN  \n",
       "2019-08-14  68158514144  1.094571e+06  1.187936e+06  3.271487          NaN  \n",
       "2019-08-15  64284094828  1.100616e+06  1.186300e+06  0.552294          NaN  \n",
       "2019-08-16  34987302044  1.089067e+06  1.181698e+06 -1.049344          NaN  \n",
       "2019-08-17  31289939844  1.098674e+06  1.176588e+06  0.882131          NaN  \n",
       "2019-08-18  37120430412  1.163342e+06  1.170659e+06  5.886017          NaN  \n",
       "2019-08-19  36311888215  1.141815e+06  1.165044e+06 -1.850402          NaN  \n",
       "2019-08-20  50783213506  1.080700e+06  1.151585e+06 -5.352431          NaN  \n",
       "2019-08-21  40805036775  1.076923e+06  1.137710e+06 -0.349519          NaN  \n",
       "2019-08-22  32790497093  1.096971e+06  1.126564e+06  1.861576          NaN  \n",
       "2019-08-23  31252739914  1.069033e+06  1.117747e+06 -2.546808          NaN  \n",
       "2019-08-24  35438750265  1.064841e+06  1.106768e+06 -0.392177          NaN  \n",
       "2019-08-25  48120970164  1.098556e+06  1.099527e+06  3.166201          NaN  \n",
       "2019-08-26  22726237926  1.075948e+06  1.093640e+06 -2.057986          NaN  \n",
       "2019-08-27  10854781512  1.032300e+06  1.091668e+06 -4.056680          NaN  \n",
       "2019-08-28   9515775501  1.010875e+06  1.085690e+06 -2.075408          NaN  \n",
       "2019-08-29   5884337822  1.018767e+06  1.079844e+06  0.780648          NaN  \n",
       "2019-08-30   3554251357  1.020160e+06  1.074922e+06  0.136752          NaN  \n",
       "2019-08-31   4151658155  1.036736e+06  1.070498e+06  1.624800          NaN  \n",
       "2019-09-01  10037710651  1.101778e+06  1.066100e+06  6.273821          NaN  \n",
       "2019-09-02  13233435339  1.130058e+06  1.065260e+06  2.566702          NaN  \n",
       "\n",
       "[100 rows x 9 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 機械学習ようにコラムを追加\n",
    "df_btcjpy['label'] = df_btcjpy['Close'].shift(-30)\n",
    "df_btcjpy.tail(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8222166566174876"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 機械学習のためのデータの用意\n",
    "\n",
    "# 右端の行を削除したデーターを変数X に投入、これが元データとなる\n",
    "X = np.array(df_btcjpy.drop(['label','SMA'], axis=1))\n",
    "#sklearn.procssing.scale で　Xにいれた　データを標準化　\n",
    "X = sklearn.preprocessing.scale(X)\n",
    "\n",
    "# 予測に使う過去30日間のデーター　を predict_dataに用意＝これが予測値に使うデータとなる\n",
    "predict_data = X[-30:]\n",
    "\n",
    "# 過去30日を取り除いた入力データー　\n",
    "X = X[:-30]\n",
    "\n",
    "\n",
    "y = np.array(df_btcjpy['label'])\n",
    "# 過去30日を取り除いた実測値データ（label)\n",
    "y = y[:-30]\n",
    "\n",
    "# 訓練データー80% 検証データー 20%に分ける\n",
    "# 第一引数に入力データー、第２引数に実測値データ(label)の配列\n",
    "X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(\n",
    "    X, y, test_size = 0.2)\n",
    "\n",
    "# 訓練データーを用いて線形学習させる\n",
    "lr = sklearn.linear_model.LinearRegression()\n",
    "lr.fit(X_train,y_train)\n",
    "\n",
    "# 検証データーを用いて検証してみる\n",
    "accuracy = lr.score(X_test, y_test)\n",
    "accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1461592.2082677 , 1545079.54248829, 1514606.97201791,\n",
       "       1352683.53073338, 1263329.54241383, 1169217.1135919 ,\n",
       "       1091673.28213741, 1052944.34018067, 1120754.42657788,\n",
       "       1211136.43781809, 1336134.90589784, 1339787.75872854,\n",
       "       1088995.3770024 , 1057752.78181012, 1108625.49203615,\n",
       "       1132358.5262982 , 1182445.28482331, 1115309.63613543,\n",
       "       1078904.61252477, 1012742.07296452, 1078767.51330949,\n",
       "       1241042.35349323,  951805.88555696,  773162.01812404,\n",
       "        757209.86017137,  743514.16147432,  728495.61885952,\n",
       "        741558.94345788,  787021.18389209,  870836.24264269])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 先ほど作成した予測データを、lr.predict　で予測させて、predicted_data という変数に投入\n",
    "predicted_data = lr.predict(predict_data)\n",
    "predicted_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_btcjpy['Predict'] = np.nan　　　　   #予測値を　np.nan に投入 <<< nanは not a nomber (非数の略です)\n",
    "\n",
    "last_date = df_btcjpy.iloc[-1].name #  最終日をlast_dateに投入します。\n",
    "\n",
    "one_day = 86400　　　　#１日は86400秒なのでそれを one_dayに投入\n",
    "next_unix = last_date.timestamp() + one_day　#次の日を前日 + 86400秒として定義\n",
    "\n",
    "for data in predicted_data:　　# 　先程作成したpredicted_data を変数で回す\n",
    "    next_date = datetime.datetime.fromtimestamp(next_unix)\n",
    "    next_unix += one_day\n",
    "    df_btcjpy.loc[next_date] = np.append([np.nan]* (len(df_btcjpy.columns)-1), data)\n",
    "\n",
    "#実測値を緑色、予測値をオレンジで装画\n",
    "df_btcjpy['Close'].plot(figsize=(15,6), color=\"green\")\n",
    "df_btcjpy['Predict'].plot(figsize=(15,6), color=\"orange\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Unknown label type: 'continuous'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-35-c8ccb733e58f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mlr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensemble\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGradientBoostingClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mlr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0maccuracy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0maccuracy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/gradient_boosting.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, monitor)\u001b[0m\n\u001b[1;32m   1449\u001b[0m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'csc'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mensure_2d\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1450\u001b[0m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolumn_or_1d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwarn\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1451\u001b[0;31m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1452\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1453\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_iter_no_change\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/gradient_boosting.py\u001b[0m in \u001b[0;36m_validate_y\u001b[0;34m(self, y, sample_weight)\u001b[0m\n\u001b[1;32m   2056\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2057\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_validate_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2058\u001b[0;31m         \u001b[0mcheck_classification_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2059\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_inverse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2060\u001b[0m         \u001b[0mn_trim_classes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount_nonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbincount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/utils/multiclass.py\u001b[0m in \u001b[0;36mcheck_classification_targets\u001b[0;34m(y)\u001b[0m\n\u001b[1;32m    167\u001b[0m     if y_type not in ['binary', 'multiclass', 'multiclass-multioutput',\n\u001b[1;32m    168\u001b[0m                       'multilabel-indicator', 'multilabel-sequences']:\n\u001b[0;32m--> 169\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Unknown label type: %r\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0my_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    170\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: Unknown label type: 'continuous'"
     ]
    }
   ],
   "source": [
    "lr = sklearn.ensemble.GradientBoostingClassifier()\n",
    "lr.fit(X_train,y_train)\n",
    "accuracy = lr.score(X_test, y_test)\n",
    "accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_btcjpy['Predict'] = np.nan\n",
    "last_date = df_btcjpy.iloc[-1].name #  最終日をlast_dateに投入します。\n",
    "\n",
    "one_day = 86400\n",
    "next_unix = last_date.timestamp() + one_day\n",
    "\n",
    "for data in predicted_data:\n",
    "    next_date = datetime.datetime.fromtimestamp(next_unix)\n",
    "    next_unix += one_day\n",
    "    df_btcjpy.loc[next_date] = np.append([np.nan]* (len(df_btcjpy.columns)-1), data)\n",
    "\n",
    "#実測値を緑色、予測値をオレンジで装画\n",
    "df_btcjpy['Close'].plot(figsize=(15,6), color=\"green\")\n",
    "df_btcjpy['Predict'].plot(figsize=(15,6), color=\"orange\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr = sklearn.linear_model.LinearRegression()\n",
    "lr.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
